{"version":3,"sources":["index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","emailRef","database","ref","submitForm","e","preventDefault","email","getInputVal","toLowerCase","validateEmail","saveEmail","alert","id","document","getElementById","value","re","test","once","then","dataSnapshot","databaseObj","Object","values","val","obj","arr","forEach","concat","includes","child","push","set","catch","err","addEventListener"],"mappings":";;;AA4FC,aA3FD,QAAA,sBAGA,IAAMA,EAAiB,CACnBC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,uCAGXC,SAASC,cAAcT,GAGvB,IAAMU,EAAWF,SAASG,WAAWC,MAMrC,SAASC,EAAWC,GAChBA,EAAEC,iBAGIC,IAAAA,EAAQC,EAAY,oBAAoBC,cAE1CC,EAAcH,GAEdI,EAAUJ,GAGVK,MAAM,8CAKd,SAASJ,EAAYK,GACVC,OAAAA,SAASC,eAAeF,GAAIG,MAIvC,SAASN,EAAcH,GAEZU,MADE,ybACCC,KAAKX,GAInB,SAASI,EAAUJ,GAEfN,EAASkB,KAAK,SAETC,KAAK,SAASC,GAELC,IAAAA,EAAcC,OAAOC,OAAOH,EAAaI,OAKzCC,EAAMH,OAAOC,OAAOF,EAAY,IAGlCK,EAAM,GAGVD,EAAIE,QAAQ,SAACH,GACTE,EAAMA,EAAIE,OAAON,OAAOC,OAAOC,MAI/BE,EAAIG,SAASvB,GACbK,MAAM,6DAINX,EAAS8B,MAAM,SAASC,OAAOC,IAAI,CACtB1B,MAAAA,IAEbK,MAAM,kDAKXsB,MAAM,SAAAC,GACLlC,EAAS8B,MAAM,SAASC,OAAOC,IAAI,CACtB1B,MAAAA,IAEbK,MAAM,iDArElBE,SAASC,eAAe,mBAAmBqB,iBAAiB,SAAUhC","file":"newsletter-signup.697aff78.js","sourceRoot":"..","sourcesContent":["// Import SCSS\nimport './scss/styles.scss'\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCcgk5uQ7BMLD99bom55tqD_MZLQgs254I\",\n    authDomain: \"shez-a5a8d.firebaseapp.com\",\n    databaseURL: \"https://shez-a5a8d.firebaseio.com\",\n    projectId: \"shez-a5a8d\",\n    storageBucket: \"shez-a5a8d.appspot.com\",\n    messagingSenderId: \"195337069678\",\n    appId: \"1:195337069678:web:946ec548706c7d7f\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// Reference messages collection\nconst emailRef = firebase.database().ref();\n\n// Listen for form submit\ndocument.getElementById('newsletter-form').addEventListener('submit', submitForm);\n\n// Submit form\nfunction submitForm(e){\n    e.preventDefault();\n\n    //Get email value and convert it to lowercase\n    const email = getInputVal('newsletter-email').toLowerCase();\n\n    if (validateEmail(email)) {\n        // Run saveEmail function\n        saveEmail(email);\n    } else {\n        // Throw an error if the email address entered is invalid\n        alert('Error! Please enter a valid email address.')\n    }\n}\n\n// Function to get form value (Email Address)\nfunction getInputVal(id){\n    return document.getElementById(id).value;\n}\n\n// Email Validation function\nfunction validateEmail(email) {\n    var re = /^(?:[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/;\n    return re.test(email);\n}\n\n// Save email to firebase\nfunction saveEmail(email){\n\n    emailRef.once('value')\n        // Return snapshot of the DB\n        .then(function(dataSnapshot) {\n            // Returns DB entries as collection of objects\n            const databaseObj = Object.values(dataSnapshot.val());\n\n            // Filters to the first item in the object (in our case it's users) which returns another\n            // set of objects that are our email address key/values (Email: Value).\n            // Returns just the value from the object\n            const obj = Object.values(databaseObj[0]);\n\n            // Init empty Array\n            let arr = [];\n\n            // For each item in our array, add it to our arr variable\n            obj.forEach((val) => {\n                arr = arr.concat(Object.values(val));\n            });\n\n            // If email address is included in our array then throw some sort of error to say it exists.\n            if (arr.includes(email)) {\n                alert('Error! The Email address already exists in the database.')\n\n            // If it doesn't exist then post value to database\n            } else {\n                emailRef.child('users').push().set({\n                    'email': email,\n                });\n                alert('Success! Your Email address has been saved!');\n            }\n\n            // If the database is empty, it throws an error so within the error catch,\n            // add the value to the database\n        }).catch(err => {\n            emailRef.child('users').push().set({\n                'email': email,\n            });\n            alert('Success! Your Email address has been saved!');\n    })\n\n}"]}